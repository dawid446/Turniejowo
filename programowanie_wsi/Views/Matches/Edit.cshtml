@model programowanie_wsi.Models.Match


<h2>Edytuj wynik meczu</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.MatchID)
    @Html.HiddenFor(model => model.queue)
    @Html.HiddenFor(model => model.TeamID)
    @Html.HiddenFor(model => model.TeamID1)
    @Html.HiddenFor(model => model.TournamentID)
    @Html.HiddenFor(model => model.date)
    @Html.HiddenFor(model => model.isPlayed)
    @Html.HiddenFor(model => model.LocationID)

    <div class="form-group">
        @Html.Label(Model.Team.team_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.score, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.score, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label(Model.Team1.team_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.score1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.score1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div class="btn-group">
                @Html.ActionLink("Wróć", "Index", new { id = Model.TournamentID }, new { @class = "btn btn-danger" })
                <input type="submit" value="Zapisz" class="btn btn-success" />
            </div>
        </div>
    </div>
</div>
}

<div>
  
</div>
